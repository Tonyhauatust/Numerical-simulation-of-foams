# * ***************************************************************************
# *
# *  Copyright (C) 2013-2016 University of Dundee
# *  All rights reserved. 
# *
# *  This file is part of SAMoS (Soft Active Matter on Surfaces) program.
# *
# *  SAMoS is free software; you can redistribute it and/or modify
# *  it under the terms of the GNU General Public License as published by
# *  the Free Software Foundation; either version 2 of the License, or
# *
# *  (at your option) any later version.
# *  SAMoS is distributed in the hope that it will be useful,
# *  but WITHOUT ANY WARRANTY; without even the implied warranty of
# *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# *  GNU General Public License for more details.
# *
# *  You should have received a copy of the GNU General Public License
# *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
# *
# * ****************************************************************************/


# This is just a particle simulation with soft repulsion and no active forces.
# The purpose is to assist in building input configurations.
# A configuration like this can be used to relax the system of particles with randomly
# generated positions.

# All runtime messages will be sent to file messages.msg
messages messages.msg

# Parameter files are written in JSON format for data curation
config configuration { type = json }

# We use fixed boundary conditions.
box fixed { lx = 100.0;  ly = 100.0;  lz = 10.0 }

# We read in particle positions 
input out.input

# We set the neighbour list with cutoff distance 2.4 and padding distance of 0.5
nlist { rcut = 2.5; pad = 0.5 }

# We constrain all particles to move only on the xy plane.
constraint plane { unlimited  }

# set radius 'a' large enough that the particles will seperate
pair_potential soft {k = 10.0; a=2.0}

# Can output the vtp file to see exactly what is happening during relaxation.
dump particles { type=vtp; start=0; freq=1000; include_mesh; multi }
# We are going to convert the .dat dump to a new imput file
dump relax { type=full; start=0; freq=1000; multi; id; tp; coordinate; velocity; director; normal; boundary;  keys }

timestep 0.001
# relax the system without moving the boundary
# Typically the nve integrator is used for relaxing the system.
# If the brownian integrator is insufficient use that instead (See soft_on_plane example)
integrator brownian {group= internal; seed = 1;  nu = 0.1; mu = 1.0;  v0 =0.00}
# Fro more stable results use the nve integrator
#integrator nve {group= internal; seed = 1; }

run 1000



